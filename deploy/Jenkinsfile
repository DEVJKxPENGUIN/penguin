pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: docker
    image: docker:23.0-dind
    securityContext:
      privileged: true
    env:
    - name: DOCKER_TLS_CERTDIR
      value: ""
    ports:
    - containerPort: 2375
    - containerPort: 2376
  - name: gradle
    image: gradle:8.5.0-jdk21
    command:
    - cat
    tty: true
    volumeMounts:
    - name: gradle-cache
      mountPath: /home/gradle/.gradle
  volumes:
  - name: gradle-cache
    emptyDir: {}
"""
        }
    }

    environment {
        DOCKER_CERT_PATH = credentials('dockerhub')
        DOCKER_HOST = 'tcp://localhost:2375'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Jar') {
            steps {
                container('gradle') {
                    sh """
                    echo 'Building..'
                    echo "${params.role}"
                    gradle ${params.role}:bootJar
                    ls -la ./${params.role}/build/libs
                    """
                }
            }
        }

        stage('Build Docker') {
            steps {
                container('docker') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub',
                            usernameVariable: 'DOCKER_USERNAME',
                            passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh """
                            docker --version
                            docker info
                            echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
                            docker build -t devjk4254/penguin:latest -t devjk4254/penguin:${BUILD_NUMBER} --push ./${params.role}
                        """
                    }
                }
            }
        }

        stage('Update Manifest') {
            steps {
                dir("deploy") {
                    sh """
                        sed -e 's/{{DOCKER_NAME}}/penguin/g' \
                            -e 's/{{ROLE}}/${params.role}/g' \
                            -e 's/{{TAG}}/${BUILD_NUMBER}/g' \
                            deployment-template.yaml > ${params.role}/deployment.yaml
                        git config --global user.email 'rmsghk4254@naver.com'
                        git config --global user.name 'devjk-jenkins'
                        git remote -v
                        git show-ref
                        git add .
                        git commit -m "[jenkins] ${params.role}-${BUILD_NUMBER} deployment.yaml"
                        git push origin main
                    """
                }
            }
        }
    }
}